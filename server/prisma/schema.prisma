generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  email       String      @unique
  password    String
  createdAt   DateTime    @default(now()) @db.Timestamptz(6)
  role        Role        @default(USER)
  links       Link[]
  eventos     Evento[]
  compras     Compra[]
  anotacoes   Anotacao[]
  tags        Tag[]
  newsletter  Newsletter?
}

model Categoria {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nome        String
  links       Link[]
  eventos     Evento[]
  compras     Compra[]
  anotacoes   Anotacao[]
}

model Estado {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nome        String
  links       Link[]
  eventos     Evento[]
  compras     Compra[]
  anotacoes   Anotacao[]
}

model Tag {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nome        String
  userId      String      @db.Uuid
  user        User        @relation(fields: [userId], references: [id])
  tagRelacionadas TagRelacionada[]
}

model TagRelacionada {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  tagId       String      @db.Uuid
  tag         Tag         @relation(fields: [tagId], references: [id])

  linkId      String?     @db.Uuid
  link        Link?       @relation(fields: [linkId], references: [id])

  eventoId    String?     @db.Uuid
  evento      Evento?     @relation(fields: [eventoId], references: [id])

  compraId    String?     @db.Uuid
  compra      Compra?     @relation(fields: [compraId], references: [id])

  anotacaoId  String?     @db.Uuid
  anotacao    Anotacao?   @relation(fields: [anotacaoId], references: [id])
}

model Newsletter {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId      String      @unique @db.Uuid
  user        User        @relation(fields: [userId], references: [id])
  // outros campos da newsletter aqui
}

model Link {
  id              String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId          String      @db.Uuid
  user            User        @relation(fields: [userId], references: [id])
  categoriaId     String?     @db.Uuid
  categoria       Categoria?  @relation(fields: [categoriaId], references: [id])
  estadoId        String?     @db.Uuid
  estado          Estado?     @relation(fields: [estadoId], references: [id])
  title           String      
  link            String      
  description     String?
  tagRelacionadas TagRelacionada[]
  notification    String?
}

model Evento {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId      String      @db.Uuid
  user        User        @relation(fields: [userId], references: [id])
  categoriaId String      @db.Uuid
  categoria   Categoria   @relation(fields: [categoriaId], references: [id])
  estadoId    String      @db.Uuid
  estado      Estado      @relation(fields: [estadoId], references: [id])
  // Campos específicos do evento aqui
  tagRelacionadas TagRelacionada[]
}

model Compra {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId      String      @db.Uuid
  user        User        @relation(fields: [userId], references: [id])
  categoriaId String      @db.Uuid
  categoria   Categoria   @relation(fields: [categoriaId], references: [id])
  estadoId    String      @db.Uuid
  estado      Estado      @relation(fields: [estadoId], references: [id])
  // Campos específicos do compra aqui
  tagRelacionadas TagRelacionada[]
}

model Anotacao {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId      String      @db.Uuid
  user        User        @relation(fields: [userId], references: [id])
  categoriaId String      @db.Uuid
  categoria   Categoria   @relation(fields: [categoriaId], references: [id])
  estadoId    String      @db.Uuid
  estado      Estado      @relation(fields: [estadoId], references: [id])
  // Campos específicos da anotacao aqui
  tagRelacionadas TagRelacionada[]
}
